// 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000
// 1000000000 1000000000 5898083 6386963 5518448 5793802 5894570 5993044 5869420 6297966 5699565 5363413 5735775 5949598 5277825 5595235 6020689
// 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000
// 1000000000 5700728 6007456 6418797 5651916 5904649 6007380 6103891 5972402 6431434 5790759 5454607 5838757 6060445 5369019 5704608 6154157

#include <bits/stdc++.h>
#include <stdio.h>
#include <stdlib.h>
using namespace std;
#define max(p, q) ((p) > (q) ? (p) : (q))
#define chmin(p, q) (p > (q) ? p = (q), 1 : 0)
#define bit(n, m) (((n) >> (m)) & 1)
#define INF 1e9

int dp[1 << 17][17];
int x[20], y[20], z[20];

int dist(int p, int q) {
  return abs(x[q] - x[p]) + abs(y[q] - y[p]) + max(0, z[q] - z[p]);
}

int main() {
  int n;
  scanf("%d", &n);
  for (int i = 0; i < n; i++)
    scanf("%d%d%d", x + i, y + i, z + i);
  for (int i = 0; i < 1 << n; i++)
    for (int j = 0; j < n; j++)
      dp[i][j] = INF;

  dp[1][0] = 0;
  for (int i = 1; i < 1 << n; i++)
    for (int j = 0; j < n; j++)
      if (dp[i][j] != INF) {
        for (int k = 0; k < n; k++)
          if (bit(i, k) == 0)
            chmin(dp[i ^ (1 << k)][k], dp[i][j] + dist(j, k));
      }

  for (int i = 0; i < 1 << n; i++) {
    for (int j = 0; j < n; j++) {
      cout << dp[i][j] << " ";
    }
    cout << endl;
  }
  int ans = INF;
  for (int i = 0; i < n; i++)
    chmin(ans, dp[(1 << n) - 1][i] + dist(i, 0));
  printf("%d\n", ans);
}